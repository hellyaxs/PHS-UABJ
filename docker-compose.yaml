services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - mosquitto_network
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres_db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=${MQTT_PORT}
    depends_on:
      mosquitto:
        condition: service_started
      postgres_db:
        condition: service_healthy
  postgres_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    networks:
      - mosquitto_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
  
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    command: alembic -c /app/alembic.ini upgrade head
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres_db
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - mosquitto_network
    depends_on:
      postgres_db:
        condition: service_healthy

  mosquitto:
    image: eclipse-mosquitto
    ports:
      - "1883:1883"
      - "9004:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    networks:
      - mosquitto_network


networks:
  mosquitto_network:
    driver: bridge

volumes:
  mosquitto_data:
  mosquitto_log: